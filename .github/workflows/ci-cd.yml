name: SafeVault CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  BACKEND_IMAGE: apurva1025/safevault-backend
  FRONTEND_IMAGE: apurva1025/safevault-frontend

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
            - '.github/workflows/**'
          frontend:
            - 'frontend/**'
            - '.github/workflows/**'

  build-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: always()  # Run deploy job
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
    
    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config
    
    - name: Test kubectl connection
      run: kubectl cluster-info
    
    - name: Update deployment images
      run: |
        kubectl set image deployment/safevault-backend backend=${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        kubectl set image deployment/safevault-frontend frontend=${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
    
    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/safevault-backend --timeout=300s
        kubectl rollout status deployment/safevault-frontend --timeout=300s
    
    - name: Verify deployment
      run: |
        kubectl get pods -l app=safevault-backend
        kubectl get pods -l app=safevault-frontend
        kubectl get services